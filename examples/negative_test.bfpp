# 这个测试文件演示对负数值的支持

# 测试1: 简单的负数值（递减至负数）
+++       # 设置为3
---       # 减3
-         # 现在是-1
-         # 现在是-2
-         # 现在是-3
+++++ +++ # 加8，现在是5 (ASCII为控制字符ENQ)
.         # 输出值5

# 测试2: 使用负值进行相对寻址
>         # 移动到第1个单元格
---       # 设置为-3
*         # 相对跳转-3个单元格（应该回到第-2个单元格）
+++++ +++++ +++++ +++++ +++++ +++++ +++++ +++++ # 设置为40
+++++ +++++ +++++ ++++                         # 再加15 = 55 (ASCII '7')
.         # 输出'7'

# 测试3: 在临时指针中使用负值
>>        # 移动到第0个单元格
+++       # 设置为3
(         # 开始临时指针
  -----   # 设置为-2
  *       # 临时指针内相对跳转-2个单元格
  +++++ +++++ +++++ +++++ +++++ +++++ +++++ +++++ # 设置为40
  +++++ +++++ +++++ +++++ +                     # 再加21 = 61 (ASCII '=')
  .       # 输出'='
)         # 结束临时指针，回到第0个单元格，值为3

# 测试4: 负值循环条件
>>        # 移动到第2个单元格
----      # 设置为-4（负数视为非零，循环继续）
[         # 从-4开始循环
  +       # 增加1
  .       # 输出当前值 (-4 -> -3 -> -2 -> -1 -> 0)
]         # 当值为0时退出循环 